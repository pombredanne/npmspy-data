worker_processes  1;

# daemon must be off in container: https://github.com/smebberson/docker-alpine/tree/master/alpine-nginx#nginx-configuration
daemon off;

events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value: 
    # max_clients = worker_processes * worker_connections
}

http {
	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name npmspy.com api.npmspy.com;
		return 301 https://$server_name$request_uri;
	}

	server {
        listen 443;
		server_name npmspy.com;

		ssl on;
        # Use certificate and key provided by Let's Encrypt:
        ssl_certificate /etc/letsencrypt/live/npmspy.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/npmspy.com/privkey.pem;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

		# location / {
		# 	proxy_pass http://localhost:3000;
		# 	proxy_http_version 1.1;
		# 	proxy_set_header Upgrade $http_upgrade;
		# 	proxy_set_header Connection 'upgrade';
		# 	proxy_set_header Host $host;
		# 	proxy_cache_bypass $http_upgrade;
		# }

		location / {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://localhost:3000/;
                proxy_ssl_session_reuse off;
                proxy_set_header Host $http_host;
                proxy_cache_bypass $http_upgrade;
                proxy_redirect off;
        }
	}
}

